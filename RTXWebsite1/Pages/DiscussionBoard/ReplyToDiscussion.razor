@*@page "/replytodiscussion/{paramDiscussion}"
@using RTXWebsite1.IDbContext
@using RTXWebsite1.Models
@inject IConfiguration _config;
@inject NavigationManager NavManager;
@inject RTXWebsite1.Data.Cookies Cookie;
@inject RTXWebsite1.Data.Utils util;


@if (discussions == null)
{
    <p><em>Loading...</em></p>
}
else
{
    
    <h2> Discussion Post by: @discussions[0].PlayerName</h2>
    <h2>@this.paramDiscussion</h2>
    @foreach (var p in discussions)
    {
        <p>@p.DiscussionContent</p>

        <p>
            -----------------------------------------------
            <div>@discussions[0].Date</div>
        </p>
    }
    if(replies != null)
    {
        @foreach (var r in replies)
        {
            <div>
                @r.DiscussionContent
            </div>
            <p>
                By: @r.PlayerName at @r.Date
            </p>
         }    
    }

    <EditForm Model=@discussion OnValidSubmit="submitDiscussion">
        <DataAnnotationsValidator/>
        <div class="form-group">
            <label for="DiscussionContent">Content:</label>
            <InputText @bind-Value=discussion.DiscussionContent class="form-control" id="DiscussionContent" />
        </div>
        <ValidationMessage For="@(() => discussion.DiscussionContent)"/>
        <button type="submit" class="btn btn-primary"> Submit</button>
    </EditForm>
}

@code {
    [Parameter]
    public string paramDiscussion { get; set; } = "";
   
    List<DiscussionBoard>? discussions;
    List<DiscussionBoard>? replies;
    DiscussionBoard discussion = new DiscussionBoard();


    protected override async Task OnInitializedAsync()
    {
        // param might have illegal character, take the value from utils
        paramDiscussion = util.paramDiscussionName;

        sql = "select * from discussion where DiscussionId= @DiscussionId";

        replies = await _discussion.LoadData<DiscussionBoard, dynamic>(sql, new { DiscussionId = util.AnchorId}, _config.GetConnectionString("Discussion"));


    }


    async Task submitDiscussion()
    {
        discussion.DiscussionName = this.paramDiscussion;
        discussion.Date = DateTime.Today.ToString().Split(' ')[0];
        discussion.PlayerName = "CHANGE_ME"; //Cookie.UserID;
        discussion.Type = "Reply";
        discussion.DiscussionId = util.AnchorId;
        string sql = "insert into DiscussionPost (Post_Title, DiscussionContent, Date, Type, DiscussionId) values (@PlayerName, @DiscussionName, @DiscussionContent, @Date, @Type, @DiscussionId);";

        await _discussion.SaveData(sql, new { PlayerName = discussion.PlayerName, DiscussionName = discussion.DiscussionName,
            DiscussionContent = discussion.DiscussionContent, Date = discussion.Date, Type = discussion.Type, DiscussionId = discussion.DiscussionId }, _config.GetConnectionString("Discussion"));

            NavManager.NavigateTo("viewdiscussions");

    }

}
*@