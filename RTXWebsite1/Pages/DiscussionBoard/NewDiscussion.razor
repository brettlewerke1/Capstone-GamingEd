@page "/newdiscussion"

@using RTXWebsite1.IDbContext
@using RTXWebsite1.Models
@using Microsoft.Extensions.Configuration

@inject IDatabaseAccess _data
@inject IConfiguration _config
@inject NavigationManager NavManager
@inject RTXWebsite1.Data.Utils util
@inject RTXWebsite1.Data.Cookies Cookie;


<h1 div class="title-head">New Discussion</h1>
<hr />
    <EditForm Model=@discussion OnValidSubmit="submitDiscussion">
        <DataAnnotationsValidator/>
        <div class="form-group">
            <label for="DiscussionName">Title:</label>
            <InputText @bind-Value=discussion.Discussion_Title class="form-control" id="DiscussionName" />
        </div>
        <ValidationMessage For="@(() => discussion.Discussion_Title)"/>

        <div class="form-group">
            <label for="DiscussionContent">Content:</label>
            <InputText @bind-Value=discussion.Discussion_Desc class="form-control" id="DiscussionContent" />
        </div>
        <ValidationMessage For="@(() => discussion.Discussion_Desc)"/>
        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>

@code {
    RTXWebsite1.Models.DiscussionBoard discussion = new RTXWebsite1.Models.DiscussionBoard();
    List<PlayerInformation> player;
    private async Task GetData()
    {
        await OnInitializedAsync();
    }

    protected override async Task OnInitializedAsync()
    {
       string playerInfoJoin = @"
        SELECT 
            `Account`.`Account_ID` AS `Account_ID`,
            `Account`.`Account_Username` AS `Account_Username`,
            `Player`.`Player_Coins` AS `Player_Coins`,
            `Player`.`Player_IGN` AS `Player_IGN`,
            `Course`.`Course_ID` AS `Course_ID`,
            `Course`.`Course_Name` AS `Course_Name`,
            `Course`.`Course_Tag` AS `Course_Tag`
        FROM
            ((`Account`
            JOIN `Player` ON ((`Account`.`Account_ID` = `Player`.`Player_AccountID`)))
            JOIN `Course` ON ((`Player`.`Player_CourseID` = `Course`.`Course_ID`)))";

        string playerInfoSelect = "WHERE Account_ID = @UserID";

        player = await _data.LoadData<PlayerInformation, dynamic>(playerInfoJoin + playerInfoSelect, new { UserID = @Cookie.UserID}, _config.GetConnectionString("RTX"));
    }

    async Task submitDiscussion()
    {
        discussion.Discussion_Date = DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss");
        //discussion.Discussion_Date = "9/24/2022";
        string sql = "INSERT INTO `RTX`.`DiscussionHead` (`Discussion_Title`, `Discussion_Desc`, `Discussion_CourseID`, `Discussion_PlayerID`, `Discussion_Date`) VALUES (@Title, @Desc, @Course, @Account, @Time);";

        await _data.SaveData(sql, new { Title = @discussion.Discussion_Title, Desc = @discussion.Discussion_Desc, Course = @Cookie.CurrentClass, Account = @player[0].Player_ID, Time = @discussion.Discussion_Date}, _config.GetConnectionString("RTX"));
        NavManager.NavigateTo("/viewdiscussions");

    }
}