@page "/viewdiscussions"

@using RTXWebsite1.IDbContext
@using RTXWebsite1.Models
@using Microsoft.Extensions.Configuration

@inject IDatabaseAccess _data
@inject IConfiguration _config
@inject NavigationManager NavManager
@inject RTXWebsite1.Data.Utils util
@inject RTXWebsite1.Data.Cookies Cookie;


<h1 div class="title-head">Discussion Board</h1>

<br />


<button class="btn btn-primary" @onclick="NewDiscussion">Post New Discussion</button>

<br/>
<br/>


<h3 class="header-head">View Discussions</h3>

@if (discussions == null)
{
    <p><em>Nothing here. Start a new post?</em></p>
}
else
{
    @foreach (var p in discussions)
    {
        <div class="discussion-styling">
        <p >
            @p.Discussion_Title
        </p>

        <p>
            @p.Discussion_Date | @p.Discussion_Desc
        </p>

        <button class="btn btn-primary" @onclick="(() => Reply(p))">Open</button>

        <!--  If the person who made the post views the discussion, they have the choice to delete it  -->
        @if(Cookie.UserID == p.Discussion_PlayerID)
        {
            <button class="btn btn-primary" @onclick="(() => DeleteDiscussion(p))">DELETE</button>
        }

        </div>

      
        
    }
}

@code {
    List<DiscussionBoard>? discussions;
    List<DiscussionBoard>? deletedDiscussion;
    

    private async Task GetData()
    {
        await OnInitializedAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        string sql = "Where DiscussionHead.Discussion_CourseID = @Class";

        discussions = await _data.LoadData<DiscussionBoard, dynamic>(DiscussionBoard.GetSQL() + sql, new { Class = Cookie.CurrentClass }, _config.GetConnectionString("RTX"));
    }

    public void Reply(DiscussionBoard discussionBoard)
    {
        Cookie.CurrentDiscussion = discussionBoard.Discussion_ID;
        NavManager.NavigateTo($"/replytodiscussion/{discussionBoard.Discussion_Title}");
    }

    public void NewDiscussion()
    {
        NavManager.NavigateTo("/newdiscussion");
    }


    public async Task DeleteDiscussion(DiscussionBoard discussionBoard)
    {
        // Delete the posts in the discussion
        string sql = "Delete from DiscussionPost where Post_HeadPostID = @DiscussionID";
        deletedDiscussion = await _data.DeleteData<DiscussionBoard, dynamic>(sql, new { DiscussionID = discussionBoard.Discussion_ID}, _config.GetConnectionString("RTX"));

        // Delete the actual discussion
        sql = "Delete from DiscussionHead where Discussion_ID = @DiscussionID";
        deletedDiscussion = await _data.DeleteData<DiscussionBoard, dynamic>(sql, new { DiscussionID = discussionBoard.Discussion_ID}, _config.GetConnectionString("RTX"));
        
        NavManager.NavigateTo("/viewdiscussions", forceLoad: true);
    }
}
