@page "/quizzes"


@using RTXWebsite1.Models;

@inject RTXWebsite1.IDbContext.IQuizAccess _quiz;
@inject Blazored.LocalStorage.ILocalStorageService localStorage;
@inject IJSRuntime JsRuntime;
@inject IConfiguration _config;
@inject NavigationManager NavManager;
@inject RTXWebsite1.Data.Cookies Cookie;

@using RTXWebsite1.IDbContext
@using Microsoft.Extensions.Configuration
@inject IDatabaseAccess _data





<h1 div class="title-head"> Quizzes </h1>
<br />




<!-- If quizList exists -->
@if(quizList != null)
{
    // initialize variables
    quiz.numCorrect = 0;
    quiz.numberOfQuestions = 0;

    <EditForm Model="@quiz" OnValidSubmit="@CalcGrade" >

    <DataAnnotationsValidator/>
    <ValidationSummary />   
    <!-- go through list made from SQL at bottom of file -->
    @foreach (var p in quizList)
    {
            
        
            <h4>@p.Quiz_Question_Number) @p.Quiz_Question</h4>
             
            // increment answered questions count
            quiz.numberOfQuestions++;


             <p>
             <label for="answer">Answer: </label>              
             <InputText name="nameOne" @bind-Value=@p.Quiz_Answers   />                     
             </p>

            <!-- If question has been answered -->
            @if( @p.Quiz_Answers != "" )
            {


                // if answered correctly
                @if( @p.Quiz_Answers == @p.Quiz_Correct_Answer )
               {
                    // increment number correct count
                    quiz.numCorrect++;
                    
               }
                             
            }

    }
    <!-- Submits to CalcGrade() -->
    <button type="submit" class="btn btn-primary"> Submit</button>

    </EditForm>
    
}
else
{
    <p><em>Loading...</em></p>
}




@code {

    RTXWebsite1.Models.Quiz quiz = new RTXWebsite1.Models.Quiz();
    List<Quiz>? quizList;



    private async Task GetData()
    {
        await OnInitializedAsync();
    }


    protected override async Task OnInitializedAsync()
    {
        string sql = "select * from Quiz where Quiz_Number = 1";

        quizList = await _data.LoadData<Quiz, dynamic>(sql, new { UserID = @Cookie.UserID }, _config.GetConnectionString("RTX"));


    }


    async Task CalcGrade( )
    {

        // navigate to results page while passing in 2 parameters
        NavManager.NavigateTo($"/results/{quiz.numCorrect}/{quiz.numberOfQuestions}");
        
    }



}
