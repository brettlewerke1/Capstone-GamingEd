@page "/account"

@using RTXWebsite1.IDbContext
@using RTXWebsite1.Models
@using Microsoft.Extensions.Configuration
@inject IDatabaseAccess _data
@inject IAccountAccess _account
@inject IConfiguration _config
@inject RTXWebsite1.Data.Cookies Cookie;

@inject NavigationManager NavManager

<h1 div class="title-head">Account</h1>
<br />
 

@if (Cookie.UserID == 0)
{
    NavManager.NavigateTo("/");
}

@if (account == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h3>@account[0].Account_Username 's Profile</h3>
    <p>
        Username: @account[0].Account_Username
    </p>

    if (player == null)
    {
        <em>Loading...</em>
    }
    else if (player.Count() == 0)
    {
        <p>No classes found.</p>
    }
    else
    {
        <h4>Enrolled Classes</h4>
        @foreach (var playInfo  in player)
        {
            <p>
                -------------------------------------------------
            </p>
            <p>
                (@playInfo.Course_Tag) @playInfo.Course_Name
            </p>
            <p>
                IGN: @playInfo.Player_IGN | Coins: @playInfo.Player_Coins
            </p>
            <img src="@playInfo.Avatar_Image" class="avatar"/>
        }
    }
}

@code {
    List<Account>? account;
    List<PlayerInformation>? player;

    private async Task GetData()
    {
        await OnInitializedAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        string sql = "WHERE Account_ID = @UserID";

        account = await _data.LoadData<Account, dynamic>( Account.GetSQL() + sql, new { UserID = @Cookie.UserID}, _config.GetConnectionString("RTX"));

        player = await _data.LoadData<PlayerInformation, dynamic>( PlayerInformation.GetSQL() + sql, new { UserID = @Cookie.UserID}, _config.GetConnectionString("RTX"));
    }
}
