@page "/resetpassword"


@using RTXWebsite1.IDbContext
@using RTXWebsite1.Models
@using Microsoft.Extensions.Configuration
@inject IDatabaseAccess _data
@inject IConfiguration _config
@inject RTXWebsite1.Data.Cookies Cookie;

@inject NavigationManager NavManager




<!-- Display title -->
<h1 div class="title-head">Reset Password</h1>
<br />
<br/>
<br/>











        <EditForm Model="@resetpassword" OnValidSubmit="@HandleValidSubmit">

            <label for="currentPassword">Please enter your current password: </label>
            <InputText @bind-Value= "resetpassword.oldPassword" />

            <br/>
            <br/>

            <label for="newPassword">Please enter your new password: </label>
            <InputText @bind-Value= "resetpassword.newPassword" />

            <br/>
            <br/>

            <label for="confirmPassword">Please confirm your new password: </label>
            <InputText @bind-Value= "resetpassword.confirmNewPassword" />

            <br/>
            <br/>


            <button type="submit" class="btn btn-primary"> Reset Password </button>
            <br />



        </EditForm>



        

        @((MarkupString)myMarkup)
  



















@code {


    RTXWebsite1.Models.ResetPassword resetpassword = new RTXWebsite1.Models.ResetPassword();


    string myMarkup = "";


    private async void HandleValidSubmit()
    {

        // if all fields have been answered
        if( resetpassword.oldPassword != null && resetpassword.newPassword != null && resetpassword.confirmNewPassword != null )
        {
            NavManager.NavigateTo($"/passwordupdated/{resetpassword.oldPassword}/{resetpassword.newPassword}/{resetpassword.confirmNewPassword}");
        }
        else
        {
             <!-- Display that you did not answer all the fields  -->
             myMarkup = "<p class='markup'><em>You did not answer all fields</em>.</p>";
        }


    }







}
