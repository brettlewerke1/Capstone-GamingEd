@page "/passwordupdated/{ReceivedOldPassword}/{ReceivedNewPassword}/{ReceivedNewPasswordConfirm}"



@using RTXWebsite1.IDbContext
@using RTXWebsite1.Models
@using Microsoft.Extensions.Configuration
@inject IDatabaseAccess _data
@inject IConfiguration _config
@inject RTXWebsite1.Data.Cookies Cookie;

@inject NavigationManager NavManager






<h1 div class="title-head">Password Updated</h1>



@if( @ReceivedOldPassword == null || ReceivedNewPassword == null || ReceivedNewPasswordConfirm == null )
{
    <p>You did not enter all fields please go back and try again.</p>
}








@((MarkupString)myMarkup)


@code {



    [Parameter]
    public string? ReceivedOldPassword { get; set; }

    [Parameter]
    public string? ReceivedNewPassword { get; set; }

    [Parameter]
    public string? ReceivedNewPasswordConfirm { get; set; }


    string myMarkup = "";





    List<Account>? accountList;

    List<PlayerInformation>? playerList;

    private async Task GetData()
    {
        await OnInitializedAsync();
    }



    protected override async Task OnInitializedAsync()
    {

        string sql = "WHERE Account_ID = @UserID";

        accountList = await _data.LoadData<Account, dynamic>(Account.GetSQL() + sql, new { UserID = @Cookie.UserID }, _config.GetConnectionString("RTX"));






        foreach( var a in accountList )
        {
            if( a.Account_Password == ReceivedOldPassword && ReceivedNewPassword == ReceivedNewPasswordConfirm )
            {
                string sqlAgain = "UPDATE `RTX`.`Account` SET `Account_Password` = @ThisPassword WHERE (`Account_ID` = @ThisAccount)";
                playerList = await _data.LoadData<PlayerInformation, dynamic>(sqlAgain, new { ThisPassword = ReceivedNewPassword, ThisAccount = Cookie.UserID }, _config.GetConnectionString("RTX"));
                
                // user password has been changed
                myMarkup = "<p class='markup'><em>You're password has been successfully changed!</em>.</p>";
            
            }
            else
            {



                 // User did not enter the correct password for their account
                 myMarkup = "<p class='markup'><em>Incorrect Password</em>.</p>";
            }


            if( ReceivedNewPassword != ReceivedNewPasswordConfirm && a.Account_Password == ReceivedOldPassword  )
            {
                // Entered new password was not entered correctly twice  
                myMarkup = "<p class='markup'><em>Your new passwords did not match. Please go back and try again.</em>.</p>";
            }


        }

        




    }




}
