@page "/marketplace"

@using RTXWebsite1.IDbContext
@using RTXWebsite1.Models
@using Microsoft.Extensions.Configuration
@inject RTXWebsite1.Data.Cookies Cookie;

@inject IConfiguration _config
@inject IDatabaseAccess _data

@inject NavigationManager NavManager

<h1 div class="title-head">Market</h1>

<br />


<hr/>

@if ( Cookie.CurrentClass == 0 )
{
    NavManager.NavigateTo("/");
}
else if (transactions == null)
{
    <em>Loading...</em>
}
else
{
    if( player is not null )
    {
        <h2 class="header-head">@player[0].Player_IGN's Total Coins: <em>@player[0].Player_Coins</em></h2>
        <p>----------------------------------------------------------------------------------------------------</p>

        if( transactions.Count() == 0)
        {
            <p>No transactions found.</p>
        }
        else
        {
                    <h4 class="header-head">Purchase Avatars</h4>
                    <p><button type="button" @onclick="(() => ViewAvatars())">View</button></p>

                    <p>------------------------------------------------------------------------</p>
               
            @foreach (var p in transactions)
            {
               
                    <h4 class="header-head">@p.Transaction_Name</h4>
                    <p>@p.Transaction_Description</p>
                    <p>@p.Transaction_Cost <button type="button">+</button></p>

                    <p>------------------------------------------------------------------------</p>
                
            }
         
        }
    }
}

@code{
    List<Marketplace>? transactions;
    List<PlayerInformation>? player;

    private async Task GetData()
    {
        await OnInitializedAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        string sql = "select * from Transaction where Transaction_CourseID = @CourseNum";

        transactions = await _data.LoadData<Marketplace, dynamic>(sql, new { CourseNum = Cookie.CurrentClass}, _config.GetConnectionString("RTX"));

        sql = "WHERE Player_ID = @ThisPlayer";

        player = await _data.LoadData<PlayerInformation, dynamic>(PlayerInformation.GetSQL() + sql, new { ThisPlayer = Cookie.PlayerID }, _config.GetConnectionString("RTX"));
    }

    private void ViewAvatars()
    {
        NavManager.NavigateTo("/avatars");
    }
}

