@page "/classes"


@using RTXWebsite1.IDbContext
@using RTXWebsite1.Models
@using Microsoft.Extensions.Configuration
@inject IAccountAccess _data
@inject IConfiguration _config
@inject RTXWebsite1.Data.Cookies Cookie;

@inject NavigationManager NavManager

<h1 div class="title-head">Classes</h1>
<hr />

<p><em>Under Construction</em></p>
@if (account == null)
{
    <p><em>Loading...</em></p>
}
else
{
    
    /*
    Old Code
    @foreach (var p in account)
    {
        @if(p.ClassOne == null && p.ClassTwo == null)
        {
            <p>
                You are currently not enrolled in any classes. Please reach out to your administrator to request a course.
            </p>
        }

        @if(p.ClassOne == "cs450" || p.ClassTwo == "cs450")
        {
            <p>
                <button class="btn btn-primary" @onclick="CS450">Computer Science 450</button>
            </p>
        }

        @if(p.ClassOne == "cs486" || p.ClassTwo == "cs486")
        {
            <p>
                <button class="btn btn-primary" @onclick="CS486">Computer Science 486</button>
            </p>
        }
        @if(p.ClassOne == "cs100" || p.ClassTwo == "cs100")
        {
            <p>
                <button class="btn btn-primary" @onclick="CS100">Computer Science 100</button>
            </p>
        }
    }
    */
}


@code {

    List<Account>? account = null;

    /*
    private async Task GetData()
    {
        await OnInitializedAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        string sql = "select * from people where Username = @Username";

        account = await _data.LoadData<Account, dynamic>(sql, new { Username = @Cookie.CookieAuth}, _config.GetConnectionString("Account"));
    }



    
    Old Code
    public async Task CS450()
    {
        NavManager.NavigateTo("/cs450");
    }

    public async Task CS486()
    {
        NavManager.NavigateTo("/cs486");
    }

    public async Task CS100()
    {
        NavManager.NavigateTo("/cs100");
    }
    */
}





