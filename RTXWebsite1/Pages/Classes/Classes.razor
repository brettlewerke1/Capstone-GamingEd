@page "/classes"


@using RTXWebsite1.IDbContext
@using RTXWebsite1.Models
@using Microsoft.Extensions.Configuration
@inject IDatabaseAccess _data
@inject IConfiguration _config
@inject RTXWebsite1.Data.Cookies Cookie;

@inject NavigationManager NavManager

<h1 div class="title-head">Classes</h1>
<br />

@if (player == null)
{
    <p><em>No classes found.</em></p>
}
else
{
    @foreach (var p in player)
    {
        <p>
            <button class="btn btn-primary" @onclick="(() => AccessClass(p.Course_ID))" id="@p.Course_ID">@p.Course_Name</button>
        </p>
    }
}


@code {
    List<Account>? account;
    List<PlayerInformation>? player;

    private async Task GetData()
    {
        await OnInitializedAsync();
    }

    private async Task AccessClass( int CourseID )
    {
        Cookie.CurrentClass = CourseID;
        NavManager.NavigateTo("/ClassHome");
    }

    protected override async Task OnInitializedAsync()
    {
        string playerInfoJoin = @"
        SELECT 
            `Account`.`Account_ID` AS `Account_ID`,
            `Account`.`Account_Username` AS `Account_Username`,
            `Player`.`Player_Coins` AS `Player_Coins`,
            `Player`.`Player_IGN` AS `Player_IGN`,
            `Course`.`Course_ID` AS `Course_ID`,
            `Course`.`Course_Name` AS `Course_Name`,
            `Course`.`Course_Tag` AS `Course_Tag`
        FROM
            ((`Account`
            JOIN `Player` ON ((`Account`.`Account_ID` = `Player`.`Player_AccountID`)))
            JOIN `Course` ON ((`Player`.`Player_CourseID` = `Course`.`Course_ID`)))";

        string playerInfoSelect = "WHERE Account_ID = @CurrentAccount";

        player = await _data.LoadData<PlayerInformation, dynamic>(playerInfoJoin + playerInfoSelect, new { CurrentAccount = @Cookie.UserID }, _config.GetConnectionString("RTX"));
    }
}





